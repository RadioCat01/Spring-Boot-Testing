spring:
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.type.mapping: news:com.News.NewsAPI.kafka.UserHistoryDTO

resilience4j:
  circuitbreaker:
    instances:
      NewsAPiCircuitBreaker:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        waitDurationInOpenState: 10s
        failureRateThreshold: 50
        automatic-transition-from-open-to-half-open-enabled: true
        sliding-window-type: count_based

  retry:
    instances:
      NewsAPiCircuitBreaker:
        max-attempts: 5
        wait-duration: 2s

  ratelimiter:
    instance:
      NewsAPiCircuitBreaker:
        timeout-duration: 2s
        limit-refresh-period: 4
        limit-for-period: 2

management:
  endpoints:
    web:
      exposure:
        include: "health"
  endpoint:
    health:
      show-details: "always"
  health:
    circuitbreakers:
      enabled: "true"




server:
  port: 8083


#resilience4j.circuitbreaker.instance.companyBreaker.registerHealthIndicatior=true
#resilience4j.circuitbreaker.instance.companyBreaker.slidingWindowSized=10
#resilience4j.circuitbreaker.instance.companyBreaker.minimumNumberOfCalls=5
#resilience4j.circuitbreaker.instance.companyBreaker.permittedNumberOfCallsInHalfOpenState=3
#resilience4j.circuitbreaker.instance.companyBreaker.waitDurationInOpenState=10s
#resilience4j.circuitbreaker.instance.companyBreaker.failureRateThreshold=50
#resilience4j.circuitbreaker.instance.companyBreaker.register-health-indicator=true
#resilience4j.circuitbreaker.instance.companyBreaker.automatic-transition-from-open-to-half-open-enabled=true
#resilience4j.circuitbreaker.instance.companyBreaker.sliding-window-type=count_based
#resilience4j.circuitbreaker.instance.companyBreaker.max-attempts=5
#resilience4j.circuitbreaker.instance.companyBreaker.wait-duration=2s
#resilience4j.circuitbreaker.instance.companyBreaker.timeout-duration=0
#resilience4j.circuitbreaker.instance.companyBreaker.limit-refresh-period=4
#resilience4j.circuitbreaker.instance.companyBreaker.limit-for-period=2

#management.health.circuitbreakers.enabled=true
#management.endpoints.web.exposure.include=health
#management.endpoint.health.show-details=always